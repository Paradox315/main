<launch>
    <!-- RPC Server Parameters -->
    <arg name="rpc_host" default="localhost" />
    <arg name="rpc_port" default="8000" />
    
    <!-- Visualization Parameters - 适应3子图布局 -->
    <arg name="figure_width" default="20" />  <!-- 更宽以容纳3个子图 -->
    <arg name="figure_height" default="8" />  <!-- 适中的高度 -->
    <arg name="plot_range" default="50.0" />
    <arg name="dpi" default="100" />
    <arg name="save_images" default="true" />
    <arg name="save_path" default="/home/huyaowen/catkin_ws/visualization_output" />
    <arg name="require_fused_results" default="true" />
    <arg name="wait_for_fusion_timeout" default="5.0" />
    
    <!-- Start RPC Matching Server -->
    <node pkg="vehicle_fusion_detector" type="matching_rpc_server.py" 
          name="matching_rpc_server" output="screen" 
          args="--host $(arg rpc_host) --port $(arg rpc_port)" required="true"/>
    
    <!-- Own Vehicle Detector -->
    <node pkg="vehicle_fusion_detector" type="own_sensor_detector.py" 
          name="own_sensor_detector" output="screen">
        <param name="bag_file" value="/home/huyaowen/output1.bag" />
        <param name="input_topic" value="/detection" />
        <param name="vehicle_id" value="vehicle_A" />
        <param name="publish_rate" value="1.2" />
        <param name="loop_playback" value="true" />
    </node>
    
    <!-- Other Vehicle Detector -->
    <node pkg="vehicle_fusion_detector" type="other_vehicle_detector.py" 
          name="other_vehicle_detector" output="screen">
        <param name="vehicle_id" value="vehicle_B" />
        <param name="publish_rate" value="1.0" />
        <param name="loop_playback" value="true" />
    </node>
    
    <!-- Start Detection Fusion Node -->
    <node pkg="vehicle_fusion_detector" type="fusion_node.py" 
          name="detection_fuser_node" output="screen">
        <param name="rpc_host" value="$(arg rpc_host)" />
        <param name="rpc_port" value="$(arg rpc_port)" />
        <param name="rpc_timeout" value="5.0" />
        <param name="vehicle_id" value="vehicle_A" />
    </node>
    
    <!-- Start Detection Visualizer with fusion result checking -->
    <node pkg="vehicle_fusion_detector" type="detection_visualizer.py" 
          name="detection_visualizer" output="screen">
        <param name="figure_width" value="$(arg figure_width)" />
        <param name="figure_height" value="$(arg figure_height)" />
        <param name="plot_range" value="$(arg plot_range)" />
        <param name="dpi" value="$(arg dpi)" />
        <param name="save_images" value="$(arg save_images)" />
        <param name="save_path" value="$(arg save_path)" />
        <param name="save_interval" value="1.0" />
        <param name="require_fused_results" value="$(arg require_fused_results)" />
        <param name="wait_for_fusion_timeout" value="$(arg wait_for_fusion_timeout)" />
    </node>
</launch>
